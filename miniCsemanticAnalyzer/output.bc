; ModuleID = 'miniC'
source_filename = "miniC"

@0 = private unnamed_addr constant [21 x i8] c"if: value of a = %d\0A\00", align 1
@1 = private unnamed_addr constant [23 x i8] c"else: value of a = %d\0A\00", align 1
@2 = private unnamed_addr constant [22 x i8] c"for: value of a = %d\0A\00", align 1
@3 = private unnamed_addr constant [17 x i8] c"value of a = %d\0A\00", align 1

define i8 @main(i32 %arg1) {
entry:
  %a = alloca i32, align 4
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  %arg11 = alloca i32, align 4
  store i32 %arg1, i32* %arg11, align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* %w, align 4
  store i32 0, i32* %a, align 4
  %0 = load i32, i32* %w, align 4
  store i32 1, i32* %w, align 4
  %1 = load i32, i32* %a, align 4
  %2 = load i32, i32* %w, align 4
  %addition = add i32 %2, 3
  store i32 %addition, i32* %a, align 4
  %3 = load i32, i32* %w, align 4
  %4 = call i32 @scanInt()
  store i32 %3, i32* %w, align 4
  %5 = load i32, i32* %i, align 4
  store i32 0, i32* %i, align 4
  %6 = load i32, i32* %i, align 4
  %lessthan = icmp slt i32 %6, 5
  br i1 %lessthan, label %loop, label %afterLoop

loop:                                             ; preds = %then, %entry
  %7 = load i32, i32* %a, align 4
  %greaterthan = icmp sgt i32 %7, 5
  br i1 %greaterthan, label %if, label %else

afterLoop:                                        ; preds = %then, %if, %entry
  %8 = load i32, i32* %w, align 4
  %9 = load i32, i32* %a, align 4
  store i32 %9, i32* %w, align 4
  %10 = load i32, i32* %a, align 4
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @3, i32 0, i32 0), i32 %10)
  ret i8 120

if:                                               ; preds = %loop
  %12 = load i32, i32* %a, align 4
  store i32 6, i32* %a, align 4
  %13 = load i32, i32* %a, align 4
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @0, i32 0, i32 0), i32 %13)
  br label %afterLoop

else:                                             ; preds = %loop
  %15 = load i32, i32* %a, align 4
  store i32 14, i32* %a, align 4
  %16 = load i32, i32* %a, align 4
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1, i32 0, i32 0), i32 %16)
  br label %then

then:                                             ; preds = %else
  %18 = load i32, i32* %a, align 4
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @2, i32 0, i32 0), i32 %18)
  %20 = load i32, i32* %i, align 4
  %addEqual = add i32 %20, 1
  store i32 %addEqual, i32* %i, align 4
  %21 = load i32, i32* %i, align 4
  %lessthan2 = icmp slt i32 %21, 5
  br i1 %lessthan2, label %loop, label %afterLoop
}

declare i32 @scanInt()

declare i32 @printf(i8*, ...)

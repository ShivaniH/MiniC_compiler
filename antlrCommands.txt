[shivanih@katzchen minic-grammar-ShivaniH]$ cd antlr/
[shivanih@katzchen antlr]$ antlr4 Expr.g4 
[shivanih@katzchen antlr]$ javac Expr*.java
[shivanih@katzchen antlr]$ grun Expr prog ../tests/test0.mc -gui
line 1:2 token recognition error at: '='
line 1:4 missing ';' at 'x'
Sep 02, 2020 6:57:10 PM java.util.prefs.FileSystemPreferences$1 run
INFO: Created user preferences directory.
[shivanih@katzchen antlr]$ grun Expr prog ../tests/test0.mc -gui
[shivanih@katzchen antlr]$ 

grun miniCgrammar program ../../miniCsemanticAnalyzer/simpleTest.mc -gui

*****************************************************************************************************

To work with Antlr's C++ target:
(Download and build antlr's cpp runtime, instructions on github)

antlr4 -no-listener -visitor -Dlanguage=Cpp miniCgrammar.g4



g++ -I /usr/local/include/antlr4-runtime -L /usr/local/lib/antlr4cppRuntime/run/usr/local -lantlr  -o trial  *.cpp



For your folder structure: (from the semantic analyzer folder, where semanticAnalyzerMain.cpp is)

export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"

g++ -I ../miniCParser/antlr -I /usr/local/include/antlr4-runtime -L /usr/local/lib -lantlr4-runtime  -o trial  ../miniCParser/antlr/miniCgrammarLexer.cpp ../miniCParser/antlr/miniCgrammarParser.cpp semanticAnalyzerMain.cpp

./trial ../samplePrograms/sample1.mc



UPDATE:

export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"

g++ -I ../miniCParser/antlr -I /usr/local/include/antlr4-runtime -L /usr/local/lib -lantlr4-runtime  -o miniCcompiler  ../miniCParser/antlr/miniCgrammarLexer.cpp ../miniCParser/antlr/miniCgrammarParser.cpp miniCMain.cpp

./miniCcompiler ../samplePrograms/sample1.mc





UPDATED COMMANDS TO SUPPORT LLVM:

export LD_LIBRARY_PATH="/home/shivanih/Desktop/IIITHsem3/Compilers/llvm-project/build/lib:/usr/local/lib:$LD_LIBRARY_PATH"

LLVM_CONFIG="/home/shivanih/Desktop/IIITHsem3/Compilers/llvm-project/build/bin/llvm-config"

g++ -I ../miniCParser/antlr -I /usr/local/include/antlr4-runtime -L /usr/local/lib -lantlr4-runtime  `$LLVM_CONFIG --system-libs --cppflags --ldflags --libs core`  -o miniCcompiler  ../miniCParser/antlr/miniCgrammarLexer.cpp ../miniCParser/antlr/miniCgrammarParser.cpp miniCMain.cpp




ICKY, but may help to create makefile:

g++ -I ../miniCParser/antlr -I /usr/local/include/antlr4-runtime -L /usr/local/lib -lantlr4-runtime  -I/home/shivanih/Desktop/IIITHsem3/Compilers/llvm-project/llvm/include -I/home/shivanih/Desktop/IIITHsem3/Compilers/llvm-project/build/include -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -L/home/shivanih/Desktop/IIITHsem3/Compilers/llvm-project/build/lib  -lLLVM-12git  -o miniCcompiler  ../miniCParser/antlr/miniCgrammarLexer.cpp ../miniCParser/antlr/miniCgrammarParser.cpp miniCMain.cpp

